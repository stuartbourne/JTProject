53,80c53,83
< 	firstCharClass = 0;
< 	lDigit = 1;
< 	lPlus = 2;
< 	lMinus = 3;
< 	lStar = 4;
< 	lColon = 5;
< 	lEquals = 6;
< 	lDot = 7;
< 	lComma = 8;
< 	lSemicolon = 9;
< 	lQuote = 10;
< 	lLeftAngle = 11;
< 	lRightAngle = 12;
< 	lLeftParen = 13;
< 	lRightParen = 14;
< 	lLeftBracket = 15;
< 	lRightBracket = 16;
< 	lLeftBrace = 17;
< 	lRightBrace = 18;
< 	lBlank = 19;
< 	lIllegal = 20;
< 	lNewLine = 21;
< 	lTab = 22;
< 	lNewPage = 23;
< 	lEndFile = 24;
< 	lastCharClass = 24;
< 
< { ===== }
---
>         firstCharClass = 0;
>         lDigit = 1;
>         lPlus = 2;
>         lMinus = 3;
>         lStar = 4;
>         lColon = 5;
>         lEquals = 6;
>         lDot = 7;
>         lComma = 8;
>         lSemicolon = 9;
>         lQuote = 10;
>         lLeftAngle = 11;
>         lRightAngle = 12;
>         lLeftParen = 13;
>         lRightParen = 14;
>         lLeftBracket = 15;
>         lRightBracket = 16;
>         lLeftBrace = 17;
>         lRightBrace = 18;
>         lSlash = 19;
>         lHash = 20;
>         lExclamation = 21;
>         lAt = 22;
>         lBlank = 23;
>         lIllegal = 24;
>         lNewLine = 25;
>         lTab = 26;
>         lNewPage = 27;
>         lEndFile = 28;
>         lastCharClass = 28;
> 	{ ===== }
93,145c96,154
< 	pDiv = 0;
< 	firstKeywordToken = 0;
< 	pMod = 1;
< 	pOr = 2;
< 	pAnd = 3;
< 	pNot = 4;
< 	pThen = 5;
< 	pElse = 6;
< 	pOf = 7;
< 	pEnd = 8;
< 	pUntil = 9;
< 	pDo = 10;
< 	pArray = 11;
< 	pFile = 12;
< 	pPacked = 13;
< 	pProgram = 14;
< 	pConst = 15;
< 	pVar = 16;
< 	pType = 17;
< 	pProcedure = 18;
< 	pBegin = 19;
< 	pIf = 20;
< 	pCase = 21;
< 	pWhile = 22;
< 	pRepeat = 23;
< 	lastKeywordToken = 23;
< 	pIdentifier = 24;
< 	firstCompoundInputToken = 24;
< 	pInteger = 25;
< 	pLiteral = 26;
< 	lastCompoundInputToken = 26;
< 	pNewLine = 27;
< 	pEndFile = 28;
< 	pPlus = 29;
< 	pMinus = 30;
< 	pStar = 31;
< 	pColonEquals = 32;
< 	pDot = 33;
< 	pComma = 34;
< 	pSemicolon = 35;
< 	pColon = 36;
< 	pEquals = 37;
< 	pNotEqual = 38;
< 	pLess = 39;
< 	pLessEqual = 40;
< 	pGreaterEqual = 41;
< 	pGreater = 42;
< 	pLeftParen = 43;
< 	pRightParen = 44;
< 	pLeftBracket = 45;
< 	pRightBracket = 46;
< 	pDotDot = 47;
< 	lastSyntaxToken = 47;
---
> 	
> pDiv = 0;
> firstKeywordToken = 0;
> pMod = 1;
> pOr = 2;
> pAnd = 3;
> pNot = 4;
> pElse = 5;
> pOf = 6;
> pArray = 7;
> pFile = 8;
> pPacked = 9;
> pProgram = 10;
> pVar = 11;
> pType = 12;
> pIf = 13;
> pCase = 14;
> pLet = 15;
> pFunction = 16;
> pSwitch = 17;
> pDefault = 18;
> pElsif = 19;
> pLoop = 20;
> pBreak = 21;
> pWhen = 22;
> pClass = 23;
> pPublic = 24;
> lastKeywordToken = 24;
> pIdentifier = 25;
> firstCompoundInputToken = 25;
> pInteger = 26;
> pLiteral = 27;
> lastCompoundInputToken = 27;
> pNewLine = 28;
> pEndFile = 29;
> pPlus = 30;
> pMinus = 31;
> pStar = 32;
> pDot = 33;
> pComma = 34;
> pSemicolon = 35;
> pColon = 36;
> pEquals = 37;
> pNotEqual = 38;
> pDoubleEquals = 39;
> pLess = 40;
> pLessEqual = 41;
>  pGreaterEqual = 42;
> pGreater = 43;
> pLeftParen = 44;
> pRightParen = 45;
> pLeftBracket = 46;
> pRightBracket = 47;
> pDotDot = 48;
> pHash = 49;
> pAt = 50;
> pLeftBrace = 51;
> pRightBrace = 52;
> lastSyntaxToken = 52;
299c308
< 	numberStdIdentifiers = 43;
---
> 	numberStdIdentifiers = 44;
323c332
< 	quote = '''';
---
> 	quote = '"';
819a829,832
> 	    charClassMap[ord('/')] := lSlash;
> 	    charClassMap[ord('!')] := lExclamation;
> 	    charClassMap[ord('#')] := lHash;
> 	    charClassMap[ord('@')] := lAt;
1665c1678,1683
< 	Parser;
---
> 	parseInputToken := pNewLine;
> 	newInputLine := false;
> 
> 	while parseInputToken <> pEndFile do
> 		AcceptSyntaxToken;
> 	{Parser;}
1667,1668c1685,1686
< 	if errorCount > 0 then
< 	    rewrite(parseStream {, NparseStream} );
---
> 	{if errorCount > 0 then
> 	    rewrite(parseStream , NparseStream );}
